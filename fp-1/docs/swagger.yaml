basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Response:
    properties:
      data:
        type: object
      message:
        type: string
    type: object
  models.Todo:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  models.TodoPayload:
    properties:
      description:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: testing@gmail.com
    name: API Support
  description: This todo application API
  license:
    name: Apace 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms
  title: TOdo Application
  version: "1.0"
paths:
  /create-todo:
    post:
      consumes:
      - application/json
      description: create todo from parameter
      parameters:
      - description: Create todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.TodoPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create todo
      tags:
      - todos
  /todo/{id}:
    delete:
      consumes:
      - application/json
      description: Delete todo corresponding to the input id
      parameters:
      - description: ID of the todo to be deleted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete todo identified by the given id
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: Get details of todo by id
      parameters:
      - description: ID of the todo
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Get todo detail
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Edit todo using the todo id
      parameters:
      - description: ID of the todo to be edited
        in: path
        name: id
        required: true
        type: integer
      - description: Todo description
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.TodoPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Edit todo indentified by the given todo id
      tags:
      - todos
  /todos:
    get:
      consumes:
      - application/json
      description: Get details of all To Do list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Get all todos
      tags:
      - todos
swagger: "2.0"
